<%= render 'shared/flash_message' %>
<%= render 'shared/plot_menu', { plot: @plot } %>

<div class="bg-base-200 min-h-screen pb-10">
  <div class="grid grid-cols-1">
    <div class="m-2 col-span-1 shadow-xl <%= render "shared/plot_color", { plot: @plot } %>">
      <%= image_tag("pushpin.png", alt: "pin icon", class: "mx-auto", width: '30px', height: '30px') %>
      <div class="flex">
        <div class="m-2 h-60 w-60">
          <%= image_tag(@character.avatar.url.presence || asset_path('default_avatar.png')) %>
        </div>
        <div class="m-2 flex-grow">  
          <div class="text-3xl flex max-w-full border-b border-slate-700">
            <div class="flex-1 "><%= @character.name %></div>
            <%= link_to edit_character_path(@character), class: "hover:animate-pulse" do %>
              <i class="bi bi-pencil-square text-3xl"></i>
            <% end %>
            <label for="delete-modal-<%=@character.id%>", class=" ml-2 bi bi-trash text-4xl hover:animate-pulse hover:cursor-pointer">
          </div>
          <div class="text-xl my-1">役職: <%= @character.role %></div>
          <div class="text-xl my-1">年齢: <%= @character.age %></div>
          <div class="text-xl my-1">職業: <%= @character.occupation %></div>
          <div class="text-xl mt-5 border-b border-slate-700">外見の特徴</div><%= simple_format(h(@character.appearance)) %>
          <div class="text-xl mt-4 border-b border-slate-700">性格の特徴</div><%= simple_format(h(@character.personality)) %>
          <div class="text-xl mt-4 border-b border-slate-700">目的、モチベーション</div><%= simple_format(h(@character.motivation)) %>
          <div class="text-xl mt-4 border-b border-slate-700">関係性</div><%= simple_format(h(@character.relationship)) %>
        </div>
      </div>
      <div class="text-xl m-2 border-b border-slate-700">メモ</div>
      <div class="m-2"><%= simple_format(h(@character.body)) %></div>
    </div>
      <div class="overflow-x-auto flex m-2 gap-8">
        <%= render @characters %>
      </div>
  </div>
</div>

<input type="checkbox" id="delete-modal-<%= @character.id %>" class="modal-toggle" />
<label for="delete-modal-<%= @character.id %>" class="modal cursor-pointer">
  <label class="modal-box relative" for="">
    <label for="delete-modal-<%= @character.id %>" class="btn btn-sm btn-circle absolute right-2 top-2">✕</label>
    <div class="text-xl font-bold m-2 mb-4 border-b border-gray-500">登場人物を削除。</div>
    <div class="text-sm m-2 my-4">登場人物のデータを削除しても本当によろしいですか？</br>削除後に元に戻すことはできません。ご了承ください。</div>
    <%= button_to "カードを削除する",character_path(@character),class: 'btn text-gray-100 bg-gray-900 m-2 right-0', method: :delete %>  
  </label>
</label>

<% if current_user.running? %>
<div class="fixed bg-base-100 shadow-xl bottom-20 m-8 z-20 h-52 sm:h-40 w-11/12 max-w-5xl border-2 rounded-lg border-stone-800">
  <div class="chat chat-start mt-2">
    <div class="chat-image">
      <%= image_tag("booknekosan.png", width: '120px', height: '120px', class: "bottom-0") %>
    </div>
    <div id="text", class="chat-bubble chat-bubble-secondary"></div>
  </div>
  <div class="-my-8 m-2 flex justify-end items-end">
    <%= button_to  'チュートリアルを終了する', complete_tutorial_path(current_user), class: "btn btn-sm m-2" , method: :patch %>
    <div id="increment-btn", class="btn btn-sm m-2">前へ</div>
    <div id="decrement-btn", class="btn btn-sm m-2">次へ</div>
  </div>
</div>

<script>
const incrementBtn = document.getElementById('increment-btn');
const decrementBtn = document.getElementById('decrement-btn');
const textDiv = document.getElementById('text');

const texts = [
  'このページでは登場人物の詳細情報を管理することができるよ！',
  '編集アイコンをクリックすると設定を変更できるよ！',
  '人物カードをタップすると、詳細画面が表示されるよ！',
  'これで、チュートリアルは終了だよ！',
  'ここまで読んでくれてありがとう！チュートリアルを終了するボタンをクリックしてね！',
];
let currentIndex = 0;

textDiv.textContent = texts[currentIndex];
updateButtonVisibility();

incrementBtn.addEventListener('click', () => {
  currentIndex = Math.max(currentIndex - 1, 0);
  textDiv.textContent = texts[currentIndex];
  updateButtonVisibility();
});

decrementBtn.addEventListener('click', () => {
  currentIndex = Math.min(currentIndex + 1, texts.length - 1);
  textDiv.textContent = texts[currentIndex];
  updateButtonVisibility();
});

function updateButtonVisibility() {
  if (currentIndex === 0) {
    incrementBtn.setAttribute('disabled', true);
    incrementBtn.classList.add('opacity-50', 'cursor-not-allowed');
  } else {
    incrementBtn.removeAttribute('disabled');
    incrementBtn.classList.remove('opacity-50', 'cursor-not-allowed');
  }

  if (currentIndex === texts.length - 1) {
    decrementBtn.setAttribute('disabled', true);
    decrementBtn.classList.add('opacity-50', 'cursor-not-allowed');
  } else {
    decrementBtn.removeAttribute('disabled');
    decrementBtn.classList.remove('opacity-50', 'cursor-not-allowed');
  }
}
</script>
<% end %>