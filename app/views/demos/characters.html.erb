<%= render 'shared/flash_message' %>
<%= render 'demos/shared/plot_menu', { plot: @plot } %>

<div class="bg-base-200 min-h-screen pb-20", id="color">
  <div class="grid grid-cols-1">
    <div class="m-2 col-span-1 grid grid-cols-1 shadow-xl <%= render "shared/plot_card_color", { plot: @plot } %>">
      <%= label_tag "my-modal", "new character", id:"newcolor", class: "btn btn-ghost" unless @plot.user != current_user && @plot.accessibility == '公開' %>
    </div>
  </div>
  <input type="checkbox" id="my-modal" class="modal-toggle" />
  <label for="my-modal" class="modal cursor-pointer">
    <label class="modal-box relative" for="">
      <label for="my-modal" class="btn btn-sm btn-circle absolute right-2 top-2">✕</label>
      デモでは新しく登場人物を作成することはできません！</br>アカウント登録をして自分好みのプロットを作成してみませんか？
      <div><%= link_to "SignUp",new_user_path, class: "btn animate-pulsate-fwd" %></div>
    </label>
  </label>
  <div class="text-2xl m-3">登場人物一覧</div>
  <div class="container mx-auto">
    <div class="flex flex-wrap gap-8 justify-center">
      <%= render partial: "demos/characters/character", collection: @characters %>
    </div>
  </div>
</div>


<div class="fixed bg-base-100 shadow-xl bottom-20 m-8 z-20 h-52 sm:h-40 w-11/12 max-w-5xl border-2 rounded-lg border-stone-800">
  <div class="chat chat-start mt-2">
    <div class="chat-image">
      <%= image_tag("booknekosan.png", width: '120px', height: '120px', class: "bottom-0") %>
    </div>
    <div id="text", class="chat-bubble chat-bubble-secondary"></div>
  </div>
  <div class="-my-8 m-2 flex justify-end items-end">
    <% if current_user && current_user.running? %>
      <%= button_to  'チュートリアルを終了する', complete_tutorial_path(current_user), class: "btn btn-sm m-2" , method: :patch %>
    <% else %>
      <%= link_to "SignUp",new_user_path, class: "btn btn-sm m-2" %>
    <% end %>
    <div id="increment-btn", class="btn btn-sm m-2">前へ</div>
    <div id="decrement-btn", class="btn btn-sm m-2">次へ</div>
  </div>
</div>

<script>
const incrementBtn = document.getElementById('increment-btn');
const decrementBtn = document.getElementById('decrement-btn');

const menu = document.getElementById('menu');

const color = document.getElementById('color');

const newcolor = document.getElementById('newcolor');

const textDiv = document.getElementById('text');

const texts = [
  'このページでは登場人物を管理することができるよ！',
  'NEW CHARACTERをクリックすると新しい登場人物を作成できるよ！',
  '人物カードをタップすると、詳細画面が表示されるよ！',
  '好きな登場人物をタップしてみよう！',
];
let currentIndex = 0;

textDiv.textContent = texts[currentIndex];
updateButtonVisibility();

incrementBtn.addEventListener('click', () => {
  currentIndex = Math.max(currentIndex - 1, 0);
  textDiv.textContent = texts[currentIndex];
  updateButtonVisibility();
});

decrementBtn.addEventListener('click', () => {
  currentIndex = Math.min(currentIndex + 1, texts.length - 1);
  textDiv.textContent = texts[currentIndex];
  updateButtonVisibility();
});

function updateButtonVisibility() {
  if (currentIndex === 0) {
    incrementBtn.setAttribute('disabled', true);
  } else {
    incrementBtn.removeAttribute('disabled');
  }

  if (currentIndex === texts.length - 1) {
    decrementBtn.setAttribute('disabled', true);
    menu.classList.add('brightness-50');
    color.classList.add('bg-custom-gray');
    color.classList.remove('bg-base-200');
    newcolor.classList.add('bg-base-300');
  } else {
    decrementBtn.removeAttribute('disabled');
    menu.classList.remove('brightness-50');
    color.classList.remove('bg-custom-gray');
    color.classList.add('bg-base-200');
    newcolor.classList.remove('bg-base-300');
  }
}
</script>